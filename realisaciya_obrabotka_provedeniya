Процедура ОбработкаПроведения(Отказ, Режим)	
		
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.ЗаказыКлиентов.Записывать = Истина;
	Движения.Продажи.Записывать = Истина;
	Движения.УчетЗатрат.Записывать = Истина;
	
	Движения.ТоварыНаСкладах.Записать();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
	ЭлементБлокировки.ИсточникДанных = Товары; 
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Товар");
	Блокировка.Заблокировать(); 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|    РеализацияТоваровИУслугТовары.Товар КАК Номенклатура,
	|    РеализацияТоваровИУслугТовары.Ссылка.Склад КАК Склад,
	|    СУММА(РеализацияТоваровИУслугТовары.Количество) КАК Количество,
	|    СУММА(РеализацияТоваровИУслугТовары.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|    Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
	|ГДЕ
	|    РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|    РеализацияТоваровИУслугТовары.Товар,
	|    РеализацияТоваровИУслугТовары.Ссылка.Склад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|    РеализацияТоваровИУслугУслуги.Услуга,
	|    NULL,
	|    NULL,
	|    СУММА(РеализацияТоваровИУслугУслуги.Стоимость)
	|ИЗ
	|    Документ.РеализацияТоваровИУслуг.Услуги КАК РеализацияТоваровИУслугУслуги
	|ГДЕ
	|    РеализацияТоваровИУслугУслуги.Ссылка = &Ссылка
	| СГРУППИРОВАТЬ ПО
	|       РеализацияТоваровИУслугУслуги.Услуга
	|
	|ИНДЕКСИРОВАТЬ ПО
	|    Номенклатура,
	|    Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    ВТ_Товары.Номенклатура КАК Номенклатура,
	|    ВЫБОР
	|        КОГДА ВТ_Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ (Перечисление.ТипыНоменклатуры.Услуга)
	|            ТОГДА ЛОЖЬ
	|        ИНАЧЕ ИСТИНА
	|    КОНЕЦ КАК ЭтоТовар,
	|    ВТ_Товары.Номенклатура.Представление КАК НоменклатураПредставление,
	|    ВТ_Товары.Количество КАК КоличествоВДокументе,
	|    ВТ_Товары.Сумма КАК СуммаВДокументе,
	|     ВТ_Товары.Склад КАК Склад,
	|    ТоварыНаСкладахОстатки.СрокГодности КАК СрокГодности,
	|    ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|    ЕСТЬNULL(ТоварыНаСкладахОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|    ВТ_Товары.Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат
	|ИЗ
	|    ВТ_Товары КАК ВТ_Товары
	|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|                &МоментВремени,
	|                (Номенклатура, Склад) В
	|                    (ВЫБРАТЬ
	|                        ВТ_Товары.Номенклатура,
	|                        ВТ_Товары.Склад
	|                    ИЗ
	|                        ВТ_Товары КАК ВТ_Товары)) КАК ТоварыНаСкладахОстатки
	|        ПО ВТ_Товары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	|                И ВТ_Товары.Склад = ТоварыНаСкладахОстатки.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|    ТоварыНаСкладахОстатки.СрокГодности
	|ИТОГИ
	|    МАКСИМУМ(КоличествоВДокументе),
	|    МАКСИМУМ(СуммаВДокументе),
	|    СУММА(КоличествоОстаток)
	|ПО  
	|    Номенклатура";	
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));	
	
	ВыборкаНоменклатура = 
	Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗапретПроведенияПриОтрицательныхОстатках = Константы.ЗапретПроведенияПриОтрицательныхОстатках.Получить();
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		Если ВыборкаНоменклатура.ЭтоТовар И ВыборкаНоменклатура.КоличествоОстаток > 0 Тогда 
			
			СтоимостьОбщая = 0;
			
			Превышение = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток;
			Если Превышение > 0 Тогда 
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон("Превышение остатка по номенклатуре ""%1""  в количестве ""%2""", ВыборкаНоменклатура.НоменклатураПредставление, Превышение);
				Сообщение.Сообщить();
				Если ЗапретПроведенияПриОтрицательныхОстатках Тогда 
					Отказ = Истина;
				Иначе
					Сообщить("В результате проведения документа образовались отрицательные остатки!!!");
				КонецЕсли;
			КонецЕсли;
			
			Если Отказ Тогда				
				Продолжить;
			КонецЕсли;
			
			ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе; 
			
			ВыборкаДетальные = ВыборкаНоменклатура.Выбрать();
			Пока ВыборкаДетальные.Следующий() И ОсталосьСписать > 0 Цикл 
				Списываем = Мин (ВыборкаДетальные.КоличествоОстаток, ОсталосьСписать);
				
				Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаДетальные.Номенклатура;
				Движение.Склад = ВыборкаДетальные.Склад;
				Движение.СрокГодности = ВыборкаДетальные.СрокГодности;
				Движение.Количество = Списываем;
				Если Списываем = ВыборкаДетальные.КоличествоОстаток Тогда 
					Движение.Сумма = ВыборкаДетальные.СуммаОстаток;
				Иначе
					Движение.Сумма = Списываем / ВыборкаДетальные.КоличествоОстаток * ВыборкаДетальные.СуммаОстаток;
				КонецЕсли;
				
				ОсталосьСписать = ОсталосьСписать - Списываем;
				СтоимостьОбщая = СтоимостьОбщая + Движение.Сумма;
				
			КонецЦикла;
			
			Если ОсталосьСписать > 0 Тогда
				Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
				Движение.Склад = Склад;
				Движение.Количество = ОсталосьСписать;
			КонецЕсли;

			
			Движение = Движения.УчетЗатрат.Добавить();
			Движение.Период = Дата;
			Движение.СтатьяЗатрат = ВыборкаНоменклатура.СтатьяЗатрат;
			Движение.Сумма = СтоимостьОбщая;
			
		//Учитываем ситуацию, когда на складе уже нет товара, а мы все равно проводим реализацию этого товара.
		ИначеЕсли ВыборкаНоменклатура.ЭтоТовар И ВыборкаНоменклатура.КоличествоОстаток <= 0 Тогда
			Превышение = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("Превышение остатка по номенклатуре ""%1""  в количестве ""%2""", ВыборкаНоменклатура.НоменклатураПредставление, Превышение);
			Сообщение.Сообщить();
			Если ЗапретПроведенияПриОтрицательныхОстатках Тогда 
				Отказ = Истина;
			Иначе
				Сообщить("В результате проведения документа образовались отрицательные остатки!!!");
			КонецЕсли;
			
			Если Отказ Тогда				
				Продолжить;
			КонецЕсли;
			
			Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
			Движение.Склад = Склад;
			Движение.Количество = ВыборкаНоменклатура.КоличествоВДокументе;
						
		КонецЕсли;
		
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
		Движение.Сотрудник = Сотрудник;
		Движение.Клиент = Клиент;
		Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;
		
	КонецЦикла;
	
	Если Движения.УчетЗатрат.Количество() > 0 Тогда
		ТаблицаДвиженийУчетЗатрат = Движения.УчетЗатрат.Выгрузить(, "Период, СтатьяЗатрат, Сумма");
		ТаблицаДвиженийУчетЗатрат.Свернуть("Период, СтатьяЗатрат", "Сумма");
		Движения.УчетЗатрат.Загрузить(ТаблицаДвиженийУчетЗатрат);
	КонецЕсли;
	
	Если ЗначениеЗаполнено (ДокументОснование) Тогда			
		Движение = Движения.ЗаказыКлиентов.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Клиент = Клиент;
		Движение.ЗаписьКлиента = ДокументОснование;
		Движение.Сумма = Услуги.Итог("Стоимость");
	КонецЕсли;
	
КонецПроцедуры

